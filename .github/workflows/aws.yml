name: private-feed-app

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    environment: CI
    env:
      CI: true
      MONGO_URL: mongodb://localhost/testdb
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      COOKIE_KEY_1: ${{ secrets.COOKIE_KEY_1 }}
      COOKIE_KEY_2: ${{ secrets.COOKIE_KEY_1 }}
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        mongodb-version: ['4.4']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js version ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: MongoDB in GitHub Actions
      uses: supercharge/mongodb-github-action@1.6.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    - run: npm install
    - run: npm run build --prefix client

  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: private-feed-app
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
